#!/bin/bash
RROOT=$(dirname $(realpath $0))
set -e

case $1 in
	b)
		echo "Building Rmenu"
		cd $RROOT/tmp/Rmenu
		make -j$(nproc)
		echo "Done building Rmenu"

		echo "Building ATF"
		cd $RROOT/tmp/ATF
		make PLAT=px30 DEBUG=0 bl31 -j$(nproc)
		echo "Done buidling ATF"

		echo "Building U-Boot"
		cd $RROOT/tmp/u-boot
		cp $RROOT/conf/u-boot $RROOT/tmp/u-boot/.config
		make BL31=$RROOT/tmp/ATF/build/px30/release/bl31/bl31.elf ARCH=arm -j$(nproc)
		echo "Done building U-Boot"

		# TODO build linux kernel

		echo "Building musl"
		cd $RROOT/tmp/musl
		./configure --prefix=$RROOT/tmp/root --enable-wrapper=all
		make -j$(nproc)
		echo "Done building musl"
	
		echo "Building alsa-lib"
		cd $RROOT/tmp/alsa-lib
		libtoolize --force --copy --automake
		aclocal
		autoheader
		automake --foreign --copy --add-missing
		autoconf
		./configure --prefix=$RROOT/tmp/root/ --disable-aload --enable-rawmidi --disable-old-symbols --disable-python
		make -j$(nproc)
		automake --add-missing
		echo "Done building alsa-lib"

		echo "Building BusyBox"
		cd $RROOT/tmp/busybox
		cp $RROOT/conf/busybox $RROOT/tmp/busybox/.config
		make -j$(nproc)
		mkdir $RROOT/tmp/busybox/install
		echo "Done building BusyBox"

		echo "Building SDL"
		cd $RROOT/tmp/SDL
		./autogen.sh
		./configure --prefix=$RROOT/tmp/root/ --enable-haptic=no --enable-mmx=no --enable-3dnow=no --enable-sse=no --enable-sse2=no --enable-sse3=no --enable-oss=no --enable-altivec=no --enable-alsa=yes --enable-alsa-shared=no --enable-jack=no --enable-esd=no --enable-pipewire=no --enable-pulseaudio=no --enable-arts=no --enable-nas=no --enable-sndio=no --enable-diskaudio=no --enable-arm-simd=yes --enable-arm-neon=yes --enable-video-wayland=yes --enable-video-wayland-qt-touch=no --enable-libdecor=no --enable-video-rpi=no --enable-video-x11=no --enable-video-vivante=no --enable-video-cocoa=no --enable-video-metal=no --enable-render-metal=no --enable-video-directfb=no --enable-video-kmsdrm=yes --enable-video-vulkan=no --enable-libudev=no --enable-dbus=no --enable-ime=no --enable-ibus=no --enable-fcitx=no --enable-joystick-mfi=no --enable-directx=no --enable-wasapi=no --enable-xinput=no --enable-hidapi=no --enable-render-d3d=no
		make -j$(nproc)
		echo "Done building SDL"
		;;
	i)
		echo "Installing Revolution"

		export SD=$2
		if [ -z "$SD" ]; then
			echo "No MicroSD card was given!"
			exit 1
		fi

		if [ $(id -u) != 0 ]; then
			echo "You must be running $0 as root"
			exit 1
		fi

		# set up partitions
		printf 'o
n
p
1
16384
+4G
w' | fdisk $SD

		partx $SD
		mkfs.ext4 -F ${SD}1
		mkdir -p $RROOT/tmp/root


		# install busybox
		mount ${SD}1 $RROOT/tmp/busybox/install
		cd $RROOT/tmp/busybox
		make install
		umount $RROOT/tmp/busybox/install

		# set up basic dir structure
		mount ${SD}1 $RROOT/tmp/root
		mkdir $RROOT/tmp/root/sys
		mkdir $RROOT/tmp/root/dev
		mkdir $RROOT/tmp/root/proc
		mkdir $RROOT/tmp/root/tmp
		mkdir $RROOT/tmp/root/boot

		# install libraries
		make -C $RROOT/tmp/SDL install

		# install programs
		cp $RROOT/scripts/init $RROOT/tmp/root/sbin/init
		chmod a+x $RROOT/tmp/root/sbin/init

		# install linux kernel
		cp $RROOT/tmp/linux/arch/arm64/boot/dts/rockchip/rk3326*dtb $RROOT/tmp/root/boot/
		cp $RROOT/tmp/linux/arch/arm64/boot/Image $RROOT/tmp/root/boot/Image

		# install u-boot
		dd if=$RROOT/tmp/u-boot/idbloader.img of=$SD bs=512 seek=64
		dd if=$RROOT/tmp/u-boot/u-boot.itb of=$SD bs=512 seek=512


		umount $RROOT/tmp/root
		sync
		echo "Done!"
		;;
	d)
		cd $RROOT
		mkdir -p tmp
		cd tmp

		if [ -d Rmenu ]; then
			(cd $RROOT/tmp/Rmenu; git pull)
		else
			git clone git@github.com:R-ARM/Rmenu.git
		fi

		if [ -d ATF ]; then
			(cd $RROOT/tmp/ATF; git pull)
		else
			git clone https://github.com/ARM-software/arm-trusted-firmware.git ATF
		fi

		if [ -d u-boot ]; then
			(cd $RROOT/tmp/u-boot; git pull)
		else
			git clone git@github.com:Maccraft123/u-boot.git --depth 1
		fi

		if [ -d musl ]; then
			(cd $RROOT/tmp/musl; git pull)
		else
			git clone git://git.musl-libc.org/musl --depth 1
		fi

		if [ -d alsa-lib ]; then
			(cd $RROOT/tmp/alsa-lib; git pull)
		else
			git clone https://github.com/alsa-project/alsa-lib.git --depth 1
		fi

		if [ -d busybox ]; then
			(cd $RROOT/tmp/busybox; git pull)
		else
			git clone git://busybox.net/busybox.git --depth 1
		fi

		if [ -d SDL ]; then
			(cd $RROOT/tmp/busybox; git pull)
		else
			git clone https://github.com/libsdl-org/SDL.git --depth 1
		fi
		;;
esac

echo "Done"
