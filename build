#!/bin/bash
RAGNAROOT=$(dirname $(realpath $0))

[ -z "$1" ] && exit 1

set -e

function down_upd()
{
	cd $RAGNAROOT/tmp
	if [ -d $1 ]; then
		cd $1
		git pull
	else
		git clone git@github.com:R-ARM/$1.git
		cd $1
	fi
}

mkdir -p $RAGNAROOT/tmp
down_upd buildroot
down_upd u-boot
down_upd arm-trusted-firmware
cd $RAGNAROOT

# makes root and kernel
#make -C $RAGNAROOT/tmp/buildroot r_defconfig
#make -C $RAGNAROOT/tmp/buildroot


# make u-boot and atf

make bl31 CROSS_COMPILE=aarch64-linux-gnu- PLAT=px30 DEBUG=0 -C $RAGNAROOT/tmp/arm-trusted-firmware -j$(nproc)

env ARCH=arm CROSS_COMPILE=aarch64-linux-gnu- make -C $RAGNAROOT/tmp/u-boot r_defconfig
env BL31=$RAGNAROOT/tmp/arm-trusted-firmware/build/px30/release/bl31/bl31.elf ARCH=arm CROSS_COMPILE=aarch64-linux-gnu- make -C $RAGNAROOT/tmp/u-boot -j$(nproc)

if [ -n "$2" ]; then
	fallocate "$1" -l "$2"
	IMG="$(realpath $1)"
	SD="$(losetup -f)"
	losetup "$SD" "$IMG"
	P="p"
else
	SD="$1"
	P=""
fi

ls $SD || exit 1

printf 'o
n
p
1
2048

w
' | fdisk $SD || partx -a $SD

# system partition
mkfs.ext4 -F ${SD}${P}1
# data partition
#mkfs.fat -F32 ${SD}${P}2

mkdir -p $RAGNAROOT/mnt
mount ${SD}${P}1 $RAGNAROOT/mnt

bsdtar xf $RAGNAROOT/tmp/buildroot/output/images/rootfs.tar -C $RAGNAROOT/mnt/
cp $RAGNAROOT/tmp/buildroot/output/build/linux-new/arch/arm64/boot/dts/rockchip/rk3326*dtb $RAGNAROOT/mnt/boot/

# random post install
mkdir -p $RAGNAROOT/mnt/temp
chmod 700 $RAGNAROOT/mnt/temp
echo '#!/bin/sh' > $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'export XDG_RUNTIME_DIR=/temp' >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo "export SDL_GAMECONTROLLERCONFIG='03000000341200007856000000000000,Rinputer,a:b0,b:b1,x:b2,y:b3,back:b8,guide:b10,start:b9,leftshoulder:b4,rightshoulder:b5,dpup:b11,dpdown:b12,dpleft:b13,dpright:b14,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7'" >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'if [ "$1" = "start" ]; then' >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'weston --config=/root/.config/weston.ini --drm-device=card1 --seat=seat0 --tty 1 --continue-without-input --shell=kiosk-shell.so >/tmp/weston.log 2>&1 &' >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'echo $! > /tmp/weston_pid' >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'fi' >> $RAGNAROOT/mnt/etc/init.d/S20weston
echo 'if [ "$1" = "stop" ]; then kill -9 $(cat /tmp/weston_pid); fi' >> $RAGNAROOT/mnt/etc/init.d/S20weston
chmod a+x $RAGNAROOT/mnt/etc/init.d/S20weston

mkdir -p $RAGNAROOT/mnt/root/.config
echo '[core]
idle-time=0
repaint-window=15
[output]
name=DSI-1
transform=rotate-90
[autolaunch]
path=/bin/wrap-rmenu
[shell]
panel-position=none' > $RAGNAROOT/mnt/root/.config/weston.ini

echo '#!/bin/sh
while true; do rmenu; done' > $RAGNAROOT/mnt/bin/wrap-rmenu
chmod a+x $RAGNAROOT/mnt/bin/wrap-rmenu

mkdir -p $RAGNAROOT/mnt/.mednafen/
cp $RAGNAROOT/mednafen.cfg $RAGNAROOT/mnt/.mednafen/mednafen.cfg
#echo 'flash 128' > $RAGNAROOT/.mednafen/sav/RRT.type

# lol
cp $RAGNAROOT/tmp/buildroot/output/build/supertuxkart-1.3/lib/angelscript/projects/cmake/libangelscript.so.2.32.0 $RAGNAROOT/mnt/lib/
cp $RAGNAROOT/tmp/buildroot/output/build/supertuxkart-1.3/lib/libsquish/libsquish.so.0.0 $RAGNAROOT/mnt/lib/
cp $RAGNAROOT/tmp/buildroot/output/build/supertuxkart-1.3/lib/tinygettext/libtinygettext.so $RAGNAROOT/mnt/lib/

# ppsspp wants it
#cp $RAGNAROOT/mnt/usr/lib/libglslang.so $RAGNAROOT/mnt/usr/lib/libglslang.so.11
cp $RAGNAROOT/tmp/buildroot/output/build/ppsspp-v1.12.2/lib/* $RAGNAROOT/mnt/usr/lib/

cp $RAGNAROOT/newdata $RAGNAROOT/mnt/bin/newdata
chmod a+x $RAGNAROOT/mnt/bin/newdata
echo none > $RAGNAROOT/mnt/etc/datastatus

echo '#!/bin/sh' > $RAGNAROOT/mnt/etc/init.d/S03newdata
echo '[ $1 = start ] && newdata &' >> $RAGNAROOT/mnt/etc/init.d/S03newdata
chmod a+x $RAGNAROOT/mnt/etc/init.d/S03newdata

echo '#!/bin/sh
/etc/init.d/S10udev start
/etc/init.d/S20weston start
/etc/init.d/S15Rinputer start &
/etc/init.d/S03newdata start &
/etc/init.d/S04clocks.sh &
exit 0
' >> $RAGNAROOT/mnt/etc/init.d/rcS # perf hack

echo '#!/bin/sh
echo schedutil > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo schedutil > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
echo schedutil > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
echo schedutil > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
' > $RAGNAROOT/mnt/etc/init.d/S04clocks.sh
chmod a+x $RAGNAROOT/mnt/etc/init.d/S04clocks.sh

echo "Unmounting"
umount $RAGNAROOT/mnt

# u-boot
dd if=$RAGNAROOT/tmp/u-boot/idbloader.img of=$SD bs=512 seek=64
dd if=$RAGNAROOT/tmp/u-boot/u-boot.itb of=$SD bs=512 seek=512

losetup -d "$SD"
